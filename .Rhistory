source('~/.active-rstudio-document', echo=TRUE)
length(d)
source('~/.active-rstudio-document', echo=TRUE)
d
pnorm(0)
source('~/.active-rstudio-document', echo=TRUE)
d
1 / (1 + 1/4)
((0.0608 * 0.0378) / ((0.0608 + 0.0131) * (0.0378 + 0.0157)))^0.5
0.8 * 0.762
source('~/Dropbox/Work/CEDR/ProComp/ProComp Choice/v2.1 EEPA R&R/Simulations/ProCompSim.r', echo=TRUE)
x <- (0:100) / 100
plot(x, ln(x / (1-x)))
plot(x, log(x / (1-x)))
qnorm(0.1)
qnorm(0.15, mean=0, sd=0.1)
dnorm(0)
pnorm(0)
pnorm(qnorm(0.15, mean=0, sd=0.1))
sqrt(0.01)
sqrt(0.03)
pnorm(qnorm(0.15, mean=0, sd=sqrt(0.03)))
vam <- c(-4.43, -1.01, -1.28, -0.63, 1.49, -0.02,
-5.33, 0.83, -2.66, 0.15, -2.38, -4.70, 1.03,
1.39, 0.91, 2.00, 0.91, 0.08, -0.38, 1.25) / 100
var <- c(-0.05, 0.37, -0.47, -2.37, -3.00, -0.96, -1.12,
-1.98, -5.67, 0.86, -0.70, -2.07, 1.74, 1.06,
4.57, 2.92, 7.11, 0.72, 1.14, -1.23) / 100
vam
var
sd(var)
sd(vam)
mean(vam)
mean(vam)
mean(var)
min(var)
vam.p <- c(-2.99, -3.79, -2.67, 0.65, -0.63, -1.53,
-0.06, 0.35, 1.00, -1.38, -0.92, 0.33, -1.24)
mean(vam.p)
var.p <- c(-1.77, 0.26, -1.91, 0.17, -0.71, -0.91,
0.10, 2.72, 2.61, 1.85, 0.85, 0.28, -0.24)
mean(var.p)
to <- c(-0.028, -0.041, -0.030, -0.036, -0.023, -0.014, -0.044, -0.012, -0.023, -0.036, -0.023, -0.014, -0.010, -0.051, -0.024, -0.030, -0.038, -0.031, -0.036, -0.012)
mean(t0)
mean(to)
to - mean(to)
sort(to - mean(to))
pnorm(qnorm(0.15, mean=0, sd=0.1))
pnorm(2)
pnorm(1)
pnorm(0)
pnorm(-1)
pnorm(-1.5)
0.15&5
0.15^5
0.85^5
0.83&5
0.83^5
0.87^5
0.87^10
(0.118 - 0.098) / 0.098
(0.207-0.159)/0.159
(0.279-0.202)/0.202
pctdif <- function(x, y){
return((x-y)/y)}
pctdif(0.279, 0.202)
pctdif(0.092, 0.067)
pctdif(0.069, 0.055)
pctdif(0.136, 0.101)
pctdif(0.092, 0.067)
pctdif(0.122, 0.081)
pctdif(0.067, 0.049)
pctdif(0.146, 0.071)
pctdif(0.128, 0.092)
pctdif(0.112, 0.107)
pctdif(0.089, 0.074)
pctdif(0.112, 0.081)
0.61/1.39
1.16/2.53
1.06/1.82
1.14/3.53
0.5/1.48
0.128 / (0.397 + 0.128 + 0.09)
qnorm(57)
?norm
?pnorm
qnorm(.57)
qnorm(.57) - qnorm(0.41)
x <- (-40:0)
y <- 0.0066 + -.1503 * x + -0.0132 * x^2 + -0.0003 * x^3
plot(x, y, type="l")
plot(x, y, type="connected")
plot(x, y, type="line")
n <- c(30, 49, 46, 105, 137, 245, 316, 416, 489)
sum(n)
23 / 736
15 / 953
24 / 713
33 / 938
59 / 905
98 / 689
905/938 * 0.854
591/736
846/953
689/736
905/953
938/953
713/736
1 + 90 * 0.9
dnorm(0)
pnorm(0)
dnorm(0) / (1 - pnorm(0))
?read.table
wa.geo <- read.table(file = "http://www2.census.gov/programs-surveys/acs/summary_file/2014/data/5_year_seq_by_state/Washington/All_Geographies_Not_Tracts_Block_Groups/g20145wa.txt",
header = FALSE, sep = "\t")
View(wa.geo)
wa.geo <- read.table(file = "http://www2.census.gov/programs-surveys/acs/summary_file/2014/data/5_year_seq_by_state/Washington/All_Geographies_Not_Tracts_Block_Groups/g20145wa.csv",
header = FALSE, sep = ",")
View(wa.geo)
?download.file
?unzip
View(wa.geo)
(2299 * 51.7 + 2968 * 48.4) / (2299 + 2968)
(2299 * 2693 + 2968 * 2591) / (2299 + 2968)
(0.297/0.703) / (0.678 / 0.322)
0.678 - 0.297
exp(.45)
exp(0.19)
exp(0.33)
library(MASS)
?mvrnorm
matrix(c(1, r2, r2, 1), nrow=2)
r2 <- 0.1
matrix(c(1, r2, r2, 1), nrow=2)
0.025 / 0.125
45000000 / 80000
45000000 / 8000
45000000 / 6000
library(survival)
?coxph
?subset
dnorm(0)
dnorm(0.5)
pnorm(0)
qnorm(0.8)
qnorm(0.2)
x <- rnorm(100)
mean(x)
mean(which(x > -0.842))
mean(x[which(x > -0.842)])
0.42 * 0.2
1000000 + 1000000 * (5/12)
2/5 + 1/3 + 2/7
0.66 + 0.08 + 0.10 + 0.08
0.0014 / (1 - 0.8*0.2)
?rnorm
?runif
n  <- 1000
p0 <- 0.0
p1 <- 0.5
d  <- 1
base0 <- rnorm(n)
base1 <- rnorm(n)
t0    <- runif(n) < p0
t1    <- runif(n) < p1
y0 <- base0 + d * t0
y1 <- base1 + d * t1
y0s <- (y0 - mean(y0)) / sd(y0)
y1s <- (y1 - mean(y1)) / sd(y1)
X0 <- cbind(0, y0, y0s, t0)
X1 <- cbind(1, y1, y1s, t1)
X  <- rbind(X0, X1)
head(X)
dim(X)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mean(y0)
sd(y0)
mean(y1)
sd(y1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
x0 <- rnorm(10000, mean=0)
x1 <- rnorm(10000, mean=10)
x <- c(x0, x1)
sd(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?matrix
m1 <- lm(y ~ I(t) + I(d) + I(d * t), dat=dat)
attributes(m1)
m1$coefficients[4]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
1/1.25
sd(c(y11, y01))
sqrt(1.25)
0.5(1) + 0.5(2) - (0.5)^2
0.5*(1) + 0.5*(2) - (0.5)^2
0.1 * 0.9
0.5 * 10 * (1 - 0.5 * 10)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
(0.05/0.13)^2
(-200:200)/100
x <- (-200:200)/100
2 * 1.069
ln(0.997)
log(0.997)
log(1.069)
log(1.069) * 2
41424200 / 49508800
install.packages("gmm")
install.packages(c("curl", "DiagrammeR", "latticeExtra", "lme4", "multcomp", "munsell", "mvtnorm", "nnet", "quantreg", "raster", "rgdal", "rgeos", "sp", "TeachingDemos", "testit", "tmap", "visNetwork", "withr", "xtable"))
0.2 * 0.15
0.03 ^ 2
0.009
0.95 ^ 4
0.97 ^ 4
0.024 + 0.028 + 0.044 + 0.092
0.014 + 0.019 + 0.033 + 0.058
0.03^2
print(0.03^2)
0.009
9 ^ -3
9 ^ -4
0.15^2
library(pwr)
?pwr.f2.test
pwr.f2.test(u=2, v=77, f2=0.001)
pwr.f2.test(u=2, v=150, f2=0.001)
pwr.f2.test(u=2, v=150, f2=0.002)
pwr.f2.test(u=2, v=1500, f2=0.002)
pwr.f2.test(u=2, v=100, f2=0.03)
0.03 / 0.15^2
library(pwr)
0.03^2 / 0.15^2
pwr.f2.test(u=2, v=100, f2=0.04)
pwr.f2.test(u=2, v=80, f2=0.04)
pwr.f2.test(u=2, v=200, f2=0.04)
pwr.f2.test(u=2, v=250, f2=0.04)
v <- c(50:250)
p <- pwr.f2.test(u=2, v=v, f2=0.04)
p
plot(v, p)
names(p)
p <- p$power
plot(v, p)
plot(v, p, type = "l")
plot(v, p, type = "l", xlab = "Teachers", ylab="Power", las=1)
600 / 1.909
-0.0015 + 2 * 0.0056
0.0013 - 2 * 0.0012
-0.0015 - 2 * 0.0111
-0.0087 + 2 * 0.0083
-0.0069 + 2 * 0.0059
0.002 / 0.142
0.02/0.142
0.02 / 4.463
1.4/30
50000 / 1000000
?npreg
library(np)
?npreg
source('~/Dropbox/Work/ALDER/Projects/Teacher Feedback/Reports/DrawEvaluationData.r', echo=TRUE)
questions
question_name = c(
("Instructional Plans",
"Student Work",
"Assessment",
"Expectations",
"Managing Student Behavior",
"Environment",
"Respectful Culture",
"Standards and Objectives",
"Motivating Students",
"Presenting Instructional Content",
"Lesson Structure and Pacing",
"Activities and Materials",
"Questioning",
"Academic Feedback",
"Grouping",
"Teacher Content Knowledge",
"Teacher Knowledge of Students",
"Thinking",
"Problem-Solving",
"Professional Growth and Learning",
"Use of Data",
"School and Community Involvement",
"Leadership")
question_name = c(
"Instructional Plans",
"Student Work",
"Assessment",
"Expectations",
"Managing Student Behavior",
"Environment",
"Respectful Culture",
"Standards and Objectives",
"Motivating Students",
"Presenting Instructional Content",
"Lesson Structure and Pacing",
"Activities and Materials",
"Questioning",
"Academic Feedback",
"Grouping",
"Teacher Content Knowledge",
"Teacher Knowledge of Students",
"Thinking",
"Problem-Solving",
"Professional Growth and Learning",
"Use of Data",
"School and Community Involvement",
"Leadership")
length(question_name)
questions
source('~/Dropbox/Work/ALDER/Projects/Teacher Feedback/Reports/DrawEvaluationData.r', echo=TRUE)
questions
expand.grid(1:2, 1:3)
?merge
num.teach <- 10
item.fx <- cbind(1:num.item, rnorm(num.item, mean=0, sd=sqrt(0.10)))
pers.fx <- cbind(1:num.teach, rnorm(num.teach, mean=0, sd=sqrt(0.40)))
teach.truescore.data <- expand.grid(1:num.teach, 1:num.item)
num.item <- nrow(questions)
num.teach <- 10
item.fx <- cbind(1:num.item, rnorm(num.item, mean=0, sd=sqrt(0.10)))
pers.fx <- cbind(1:num.teach, rnorm(num.teach, mean=0, sd=sqrt(0.40)))
teach.truescore.data <- expand.grid(1:num.teach, 1:num.item)
teach.truescore.data
item.fx
item.fx <- data.frame(item.id=1:num.item,
item.fx=rnorm(num.item, mean=0, sd=sqrt(0.10)))
pers.fx <- data.frame(pers.id=1:num.teach, rnorm(num.teach, mean=0, sd=sqrt(0.40)))
teach.truescore.data <- expand.grid(1:num.teach, 1:num.item)
?expand.grid
names(teach.truescore.data)
num.teach <- 10
item.fx <- data.frame(item.id=1:num.item,
item.fx=rnorm(num.item, mean=0, sd=sqrt(0.10)))
pers.fx <- data.frame(pers.id=1:num.teach, rnorm(num.teach, mean=0, sd=sqrt(0.40)))
teach.truescore.data <- expand.grid(1:num.teach, 1:num.item)
names(teach.truescore.data) <- c("pers.id", "item.id")
teach.truescore.data
teach.truescore.data <- merge(teach.truescore.data, item.fx, by="item.id")
teach.truescore.data <- merge(teach.truescore.data, pers.fx, by="pers.id")
teach.truescore.data
source('~/Dropbox/Work/ALDER/Projects/Teacher Feedback/Reports/DrawEvaluationData.r', echo=TRUE)
teach.truescore.data
rep(teach.truescore.data, 2)
num.eval <- 5
teach.data <- expand.grid(1:num.teach, 1:num.item, 1:num.eval)
names(teach.data) <- c("pers.id", "item.id", "eval.id")
teach.data <- merge(teach.data, teach.truescore.data,
by=c("pers.id", "item.id", "eval.id"))
teach.data
head(teach.data)
teach.data <- merge(teach.data, teach.truescore.data,
by=c("pers.id", "item.id"))
head(teach.data)
?with
teach.data$resid <- rnorm(nrow(teach.data), mean=0, sd=sqrt(0.5))
teach.data <- with(teach.data, pers.fx + item.fx + resid)
head(teach.data)
source('~/Dropbox/Work/ALDER/Projects/Teacher Feedback/Reports/DrawEvaluationData.r', echo=TRUE)
summary(teach.data)
sd(teach.data$resid)
source('~/Dropbox/Work/ALDER/Projects/Teacher Feedback/Reports/DrawEvaluationData.r', echo=TRUE)
sd(teach.data$score)
summary(teach.data)
qnorm(0.2)
qnorm(0.05)
teach.data$eval  <- 1 * (teach.data$score < qnorm(0.05)) +
2 * (teach.data$score >= qnorm(0.05) & teach.data$score < qnorm(0.10)) +
3 * (teach.data$score >= qnorm(0.10) & teach.data$score < qnorm(0.40)) +
4 * (teach.data$score >= qnorm(0.40) & teach.data$score < qnorm(0.80)) +
5 * (teach.data$score >= qnorm(0.80))
head(teach.data)
xtabs(~teach.data$eval)
xtabs(~teach.data$eval) / nrow(teach.data)
teach.data <- arrange(teach.data, pers.id, item.id, eval.id)
head(teach.data)
rep(1:10, 2)
head(rate.fx)
rate.fx <- data.frame(rate.id=1:(2*num.teach),
rate.fx=rnorm(2*num.teach, mean=0, sd=sqrt(var.rate)))
item.fx <- data.frame(item.id=1:num.item,
item.fx=rnorm(num.item, mean=0, sd=sqrt(var.item)))
pers.fx <- data.frame(pers.id=1:num.teach,
pers.fx=rnorm(num.teach, mean=0, sd=sqrt(var.pers)))
teach.truescore.data <- expand.grid(1:num.teach, 1:num.item)
names(teach.truescore.data) <- c("pers.id", "item.id")
teach.truescore.data <- merge(teach.truescore.data, item.fx, by="item.id")
teach.truescore.data <- merge(teach.truescore.data, pers.fx, by="pers.id")
head(teach.truescore.data)
rate.fx <- data.frame(pers.id=rep(1:num.teach, 2),
rate.id=1:(2*num.teach),
rate.fx=rnorm(2*num.teach, mean=0, sd=sqrt(var.rate)))
num.eval  <- 5     # Number of evaluations per teacher candidate.
num.teach <- 10    # Number of teacher candidates.
var.item  <- 0.10  # Rubric item fx variance component.
var.pers  <- 0.40  # Person fx variance component.
var.rate  <- 0.10  # Rater fx variance component.
var.resid <- 1 - var.item - var.pers - var.rate
pr1       <- 0.03  # Proportion with eval<=1
pr2       <- 0.10  # Proportion with eval<=2
pr3       <- 0.40  # Proportion with eval<=3
pr4       <- 0.80  # Proportion with eval<=4
rate.fx <- data.frame(pers.id=rep(1:num.teach, 2),
rate.id=1:(2*num.teach),
rate.fx=rnorm(2*num.teach, mean=0, sd=sqrt(var.rate)))
head(rate.fx)
rate.fx
teach.truescore.data <- merge(teach.truescore.data, rate.fx, by="pers.id")
head(teach.truescore.data)
teach.data <- expand.grid(1:num.teach, 1:num.item, 1:num.eval)
head(teach.data)
names(teach.data) <- c("pers.id", "item.id", "eval.id")
teach.data <- merge(teach.data, teach.truescore.data,
by=c("pers.id", "item.id"))
names(teach.data) <- c("pers.id", "item.id", "eval.id")
head(teach.data)
teach.data <- expand.grid(1:num.teach, 1:num.item, 1:num.eval)
names(teach.data) <- c("pers.id", "item.id", "eval.id")
teach.data <- merge(teach.data, teach.truescore.data,
by=c("pers.id", "item.id"))
head(teach.data)
teach.data$resid <- rnorm(nrow(teach.data), mean=0, sd=sqrt(var.resid))
teach.data$score <- teach.data$pers.fx + teach.data$item.fx +
+ teach.data$rate.fx + teach.data$resid
teach.data$eval  <- 1 * (teach.data$score < qnorm(pr1)) +
2 * (teach.data$score >= qnorm(pr1) &
teach.data$score < qnorm(pr1+pr2)) +
3 * (teach.data$score >= qnorm(pr1+pr2) &
teach.data$score < qnorm(pr1+pr2+pr3)) +
4 * (teach.data$score >= qnorm(pr1+pr2+pr3) &
teach.data$score < qnorm(pr1+pr2+pr3+p4)) +
5 * (teach.data$score >= qnorm(pr1+pr2+pr3+pr4))
teach.data <- select(arrange(teach.data, pers.id, item.id, eval.id),
pers.id, item.id, eval.id, eval)
teach.data$eval  <- 1 * (teach.data$score < qnorm(pr1)) +
2 * (teach.data$score >= qnorm(pr1) &
teach.data$score < qnorm(pr1+pr2)) +
3 * (teach.data$score >= qnorm(pr1+pr2) &
teach.data$score < qnorm(pr1+pr2+pr3)) +
4 * (teach.data$score >= qnorm(pr1+pr2+pr3) &
teach.data$score < qnorm(pr1+pr2+pr3+pr4)) +
5 * (teach.data$score >= qnorm(pr1+pr2+pr3+pr4))
pr1
pr1 + pr2 + pr3 + pr4
pr1
pr2
pr3
teach.data$eval  <- 1 * (teach.data$score < qnorm(pr1)) +
2 * (teach.data$score >= qnorm(pr1) & teach.data$score < qnorm(pr2)) +
3 * (teach.data$score >= qnorm(pr2) & teach.data$score < qnorm(pr3)) +
4 * (teach.data$score >= qnorm(pr3) & teach.data$score < qnorm(pr4)) +
5 * (teach.data$score >= qnorm(pr4))
head(teach.data)
teach.data <- select(arrange(teach.data, pers.id, rate.id, item.id, eval.id),
pers.id, rate.id, item.id, eval.id, eval)
head(teach.data)
?write.table
?reshape
teach2 <- reshape(teach.data,
v.names="eval",
timevar="item.id",
idvar=c("pers.id", "rate.id", "eval.id"))
teach2 <- reshape(teach.data, direction="wide",
v.names="eval",
timevar="item.id",
idvar=c("pers.id", "rate.id", "eval.id"))
head(teach2)
?write.table
setwd(dirname(parent.frame(2)$ofile))
dirname(parent.frame(2)$ofile)
parent.frame()
?parent.frame
##########################################################
# DrawEvaluationData.r
# 2016.05.18
# Sample fake evaluation data for practice.
##########################################################
library(dplyr)
set.seed(12345)
setwd(dirname(parent.frame(2)$ofile))
getSrcDirectory()
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd("/Users/james/Dropbox/Work/ALDER/Projects/Teacher Feedback/Reports")
source('~/Dropbox/Work/ALDER/Projects/Teacher Feedback/Reports/DrawEvaluationData.r', echo=TRUE)
git commit -m "first commit"
